#!/usr/bin/env bash
# This file is part of fzf mpd user interface (FMUI).
#
# FMUI is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Foobar is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.

set -a # export everything
readonly PROJECT_ROOT=$(dirname `readlink --canonicalize "${BASH_SOURCE[0]}"`)

source "$PROJECT_ROOT/essentials.sh"
source "$PROJECT_ROOT/defaults.sh"


readonly SUPPORTED_UEBERZUG=`{
    type ueberzug &&
    { type ffmpeg || type avconv ; } &&
    { type ffprobe || type avprobe ; } &&
    type file
} &>/dev/null`$?
readonly PATTERN_OUTER_BRACKETS='\(([^()]|(?R))*\)'
readonly IDENTIFIER_GLOBAL_CMD="execute-silent"

declare $ARRAY key_bindings_args
declare $MAP key_bindings
declare $MAP key_bindings_global
declare $ARRAY fzf_options=(
    --cycle
    # case-insensitive match
    -i
    --inline-info
)

[ $IS_FILE "$FILE_CONFIG" ] &&
    source "$FILE_CONFIG"

if (( $SUPPORTED_UEBERZUG == 0 )) && 
    [ $IS_DIRECTORY "$DIR_MUSIC" ]; then
    readonly PREVIEW_BOX_POSITION='right'
    preview_box_size="${preview_box_size:-$DEFAULT_PREVIEW_BOX_SIZE_COVER}"
    preview="${preview:-$DEFAULT_PREVIEW_COVER}"
    margin="${margin:-0,0,0,$((${cover_max_columns:-$DEFAULT_COVER_MAX_COLUMNS} + 1))}"
else
    readonly PREVIEW_BOX_POSITION='top'
fi

source "$PROJECT_ROOT/cover.sh"
source "$PROJECT_ROOT/mpc.sh"
source "$PROJECT_ROOT/info.sh"
source "$PROJECT_ROOT/actions.sh"
source "$PROJECT_ROOT/keys.sh"

[ $IS_FILE "$FILE_KEYBINDINGS" ] &&
    source "$FILE_KEYBINDINGS"


function Fmui::initialise_keybindings {
    for key in ${!key_bindings[@]}; do
        # build key binding command line arguments
        key_bindings_args+=('--bind' "${key}:${key_bindings[$key]}")

        if [[ ${#key} == 1 &&
                "${key_bindings[$key]}" == "$IDENTIFIER_GLOBAL_CMD"* &&
                "${key_bindings[$key]}" != *"{"*"}"* ]]; then
            data="${key_bindings[$key]:${#IDENTIFIER_GLOBAL_CMD}}"
            cmd="${data:1}"

            if [[ "${data:0:1}" == '(' ]]; then
                cmd=`grep --only-matching --perl-regexp "$PATTERN_OUTER_BRACKETS" <<<"$data" |
                            head --lines 1`
                cmd="${cmd:1:-1}"
            fi

            key_bindings_global+=(["${key}"]="$cmd")
            export key_bindings_global_`ord $key`="$cmd"
        fi
    done
}


function Fmui::cleanup {
    Cover::stop_ueberzug 
}


function Fmui::tui {
    Cover::stop_ueberzug 
    (( $SUPPORTED_UEBERZUG == 0 )) && \
        Cover::start_ueberzug

    Mpc::get_playlist | \
        SHELL="$BINARY_BASH" \
            fzf --no-multi --prompt "${prompt:-$DEFAULT_PROMPT}" --delimiter '\.' \
                --preview "${preview:-$DEFAULT_PREVIEW}" \
                --margin "${margin:-$DEFAULT_MARGIN}" \
                --preview-window "${PREVIEW_BOX_POSITION}:${preview_box_size:-$DEFAULT_PREVIEW_BOX_SIZE}" \
                "${fzf_options[@]}" \
                "${key_bindings_args[@]}" > /dev/null
}


function Fmui::main {
    trap "Fmui::cleanup" EXIT
    Fmui::initialise_keybindings

    # The exitcode will only be zero if a reload was requested.
    while
        # do
        ${clear_queue:-${DEFAULT_CLEAR_QUEUE}} && Mpc::clear-queue
        ${fill_queue:-${DEFAULT_FILL_QUEUE}} && Mpc::update-queue
        # while
        Fmui::tui
    do continue ; done
}


if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    Fmui::main
fi
